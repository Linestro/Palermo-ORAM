GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./ramulator_16...
Starting program: /data3/haojie/olsq_ramulator/ramulator_16 configs/DDR4-config.cfg --mode=pageoram --stats my_output.txt random_addr_10000000.trace
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Total number of ORAM protected cache line blocks: 16384
Max number of levels: 15
Valid leaf ID range: 16383:32766
data valid leaf right: 32767
data num of levels: 15
data level num of ways: 16
data number of sets: 1024
Address space: 0 - 0.00195312 GB

Program received signal SIGINT, Interrupt.
0x00005555555dbaad in std::operator- (__x={is_first_command = false, addr = 320320, addr_vec = std::vector of length 6, capacity 6 = {2, 2, 3, 0, 1, 43}, metadata = false, name = "", step = -12864, coreid = 0, type = ramulator::Request::Type::READ, arrive = 78216870, depart = 78216937, callback = {<std::_Maybe_unary_or_binary_function<void, ramulator::Request&>> = {<std::unary_function<ramulator::Request&, void>> = {<No data fields>}, <No data fields>}, <std::_Function_base> = {static _M_max_size = 16, static _M_max_align = 8, _M_functor = {_M_unused = {_M_object = 0x7fffffffcc00, _M_const_object = 0x7fffffffcc00, _M_function_pointer = 0x7fffffffcc00, _M_member_pointer = (void (std::_Undefined_class::*)(std::_Undefined_class * const)) 0x7fffffffcc00}, _M_pod_data = "\000\314\377\377\377\177\000\000\000\000\000\000\000\000\000"}, _M_manager = 0x5555555e6440 <std::_Function_handler<void (ramulator::Request&), run_pagetrace<ramulator::DDR4>(ramulator::Config const&, ramulator::Memory<ramulator::DDR4, ramulator::Controller>&, char const*)::{lambda(ramulator::Request&)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>}, _M_invoker = 0x5555555e6420 <std::_Function_handler<void (ramulator::Request&), run_pagetrace<ramulator::DDR4>(ramulator::Config const&, ramulator::Memory<ramulator::DDR4, ramulator::Controller>&, char const*)::{lambda(ramulator::Request&)#1}>::_M_invoke(std::_Any_data const&, ramulator::Request&)>}}, __y={is_first_command = false, addr = 1282624, addr_vec = std::vector of length 6, capacity 6 = {1, 3, 0, 1, 0, 73}, metadata = false, name = "", step = -12864, coreid = 0, type = ramulator::Request::Type::READ, arrive = 78216898, depart = 78216967, callback = {<std::_Maybe_unary_or_binary_function<void, ramulator::Request&>> = {<std::unary_function<ramulator::Request&, void>> = {<No data fields>}, <No data fields>}, <std::_Function_base> = {static _M_max_size = 16, static _M_max_align = 8, _M_functor = {_M_unused = {_M_object = 0x7fffffffcc00, _M_const_object = 0x7fffffffcc00, _M_function_pointer = 0x7fffffffcc00, _M_member_pointer = (void (std::_Undefined_class::*)(std::_Undefined_class * const)) 0x7fffffffcc00}, _M_pod_data = "\000\314\377\377\377\177\000\000\000\000\000\000\000\000\000"}, _M_manager = 0x5555555e6440 <std::_Function_handler<void (ramulator::Request&), run_pagetrace<ramulator::DDR4>(ramulator::Config const&, ramulator::Memory<ramulator::DDR4, ramulator::Controller>&, char const*)::{lambda(ramulator::Request&)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>}, _M_invoker = 0x5555555e6420 <std::_Function_handler<void (ramulator::Request&), run_pagetrace<ramulator::DDR4>(ramulator::Config const&, ramulator::Memory<ramulator::DDR4, ramulator::Controller>&, char const*)::{lambda(ramulator::Request&)#1}>::_M_invoke(std::_Any_data const&, ramulator::Request&)>}}) at /usr/bin/../lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/stl_deque.h:373
373		  * (__x._M_node - __y._M_node - bool(__x._M_node))
(gdb) 
quit
A debugging session is active.

	Inferior 1 [process 1974533] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
